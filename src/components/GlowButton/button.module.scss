@use "/src/utils/styles/colors.scss";

@mixin animate-button {
  background-color: colors.$sky-600;
  -webkit-box-shadow: 0px 0px 30px 5px rgb(14, 165, 233, 0.7);
  -moz-box-shadow: 0px 0px 30px 5px rgb(14, 165, 233, 0.7);
  box-shadow: 0px 0px 30px 5px rgb(14, 165, 233, 0.7);
  color: #fff;
  border: 2px solid rgba(56, 191, 248, 0.439);
  .particles {
    --active: 1;
    --play-state: running;
  }
}

.main {
  border: none;
  display: flex;
  gap: 9px;
  align-items: center;
  justify-content: center;
  position: relative;
  border-radius: 25px;
  box-shadow: 0px 6px 6px #fff 10;
  box-sizing: border-box;
  cursor: pointer;
  font-weight: 600;
  font-size: 14px;
  margin: 0;
  height: 45px;
  padding: 0 13px;
  width: fit-content;
  background-color: #08111e;
  color: colors.$sky-200;
  border: 2px solid transparent;
  transition: 0.3s all ease-in-out;
  &.fullWidth {
    width: 100%;
  }
  &.isIcon {
    border-radius: 100%;
    aspect-ratio: 1/1;
    padding: 10px;
  }
  &:disabled {
    background-color: #bfdbfe;
    cursor: not-allowed;
  }
  @media (hover: hover) {
    &:hover {
      @include animate-button;
    }
  }

  &.playAnimation {
    @include animate-button;
  }

  @media (hover: none) {
    color: colors.$sky-400;
    &[data-play-on-mobile="true"] {
      @include animate-button;
    }
    &[data-play-on-mobile="false"] {
      &:hover {
        @include animate-button;
      }
    }
  }
}

.particles {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  position: absolute;
  opacity: var(--active, 0);
  pointer-events: none;
  transition: 0.2s all ease-in-out;
}

.particle {
  position: absolute;
  border-radius: 100%;
  width: 2px;
  height: 2px;
  background-color: colors.$sky-50;
  width: calc(var(--size) * 7px);
  height: calc(var(--size) * 7px);
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha);
  -webkit-animation: float-out calc(var(--duration) * 1s)
    calc(var(--delay) * -1s) infinite linear;
  animation: float-out calc(var(--duration) * 1s) calc(var(--delay) * -1s)
    infinite linear;
  transform-origin: var(--originX) var(--originY);
  -webkit-animation-play-state: var(--play-state, paused);
  animation-play-state: var(--play-state, paused);
  @keyframes float-out {
    to {
      rotate: 360deg;
    }
  }
}
